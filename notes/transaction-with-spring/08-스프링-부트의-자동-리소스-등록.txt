==== 스프링 부트의 자동 리소스 등록 ====
스프링 부트가 등장하기 이전에는 데이터소스와 트랜잭션 매니저를 직접 스프링 빈으로 등록해서 사용했다.
그런데 스프링 부트로 개발을 시작한 개발자라면 이 둘을 직접 등록한 적이 없을 것이다.

* 데이터소스와 트랜잭션 매니저를 스프링 빈으로 직접 등록
@Bean
DataSource dataSource() {
   return new DriverManagerDataSource(URL, USERNAME, PASSWORD);
}

@Bean
PlatformTransactionManager transactionManager() {
  return new DataSourceTransactionManager(dataSource());
}
- 기존에는 이렇게 직접 빈으로 등록해야 했다. 스프링 부트는 자동으로 등록해준다.

* 데이터소스 - 자동 등록
- 스프링 부트는 데이터소스(DataSource)를 스프링 빈에 자동으로 등록한다. (DataSourceAutoConfiguration)
- 자동으로 등록되는 스프링 빈 이름: dataSource
- 개발자가 직접 데이터소스를 빈으로 등록하면 스프링 부트는 데이터소스를 자동으로 등록하지 않는다.
- 스프링 부트는 다음과 같이 "application.properties(또는 yml)"에 있는 속성을 사용해서 DataSource를 생성한다.
  그리고 스프링 빈에 등록한다.

  * application.yml
  spring:
    datasource:
      url: jdbc:postgresql://localhost:5432/jdbc
      username: postgres
      password: password

- 스프링 부트가 기본으로 생성하는 데이터소스는 커넥션풀을 제공하는 "HikariDataSource"이다.
  커넥션풀과 관련된 설정도 "application.properties(또는 yml)"을 통해서 지정할 수 있다.
- "spring.datasource.url" 속성이 없으면 내장 데이터베이스(메모리 DB)를 생성하려고 시도한다.

* 트랜잭션 매니저 - 자동 등록
- 스프링 부트는 적절한 트랜잭션 매니저(PlatformTransactionManager)를 자동으로 스프링 빈에 등록한다. (DataSourceTransactionManagerAutoConfiguration)
- 자동으로 등록되는 스프링 빈 이름: transactionManager
- 개발자가 직접 트랜잭션 매니저를 빈으로 등록하면 스프링 부트는 트랜잭션 매니저를 자동으로 등록하지 않는다.
- 어떤 트랜잭션 매니저가 선택되는지는 현재 등록된 라이브러리에 따라 달라진다.
    - JDBC 기술을 사용하면 "DataSourceTransactionManager"가 빈으로 등록된다.
    - JPA 기술이 사용되면 "JpaTransactionManager"가 빈으로 등록된다.
    - 둘 다 사용하는 경우 "JpaTransactionManager"가 등록된다.
    - "JpaTransactionManager"는 "DataSourceTransactionManager"가 제공하는 기능 대부분을 지원한다.

* 자동 등록 실습
- MemberServiceV3_4Test
- 데이터소스와 트랜잭션 매니저를 스프링 빈으로 등록하는 코드가 없다.
  따라서 스프링 부트가 application.yml 안의 속성값을 참고해서 데이터소스와 트랜잭션 매니저 빈을 자동으로 생성해준다.
- TestConfiguration 에서 데이터소스를 스프링 컨테이너로부터 주입 받아서 사용하였다.

* 정리
- 데이터소스와 트랜잭션 매니저는 스프링 부트가 제공하는 자동 빈 등록 기능을 사용하는 것이 편하다.
