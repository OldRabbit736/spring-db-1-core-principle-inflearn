이 노트는 db lock 에 대해 추가적으로 조사한 내용을 담고 있다.

db lock 구현 방법은 2가지가 있다.

- pessimistic lock (비관적 락)
    - 어떤 row를 동시에 수정하는 일이 자주 일어나는 것이라고 "비관적"으로 전제한다.
    - 어떤 row를 수정할 때 먼저 lock 을 db 에서 걸어 놓고 다른 세션의 접근을(수정) 금지하는 방식이다.
    - 즉 먼저 찜해 놓는 방식이다.
    - 지금까지 이 강좌에서 설명해온 방식이 바로 이 방식이다.
- optimistic lock (낙관적 락)
    - 어떤 row를 동시에 수정하는 일이 거의 일어나지 않는 것이라고 "낙관적"으로 전제한다.
    - row 수정 시 lock 을 걸어 놓지 않는다.
    - 어떤 row를 읽고 수정한 다음, commit 할 시점에 해당 row가 변경 되었는지 확인하여 만약 변경되지 않았다면 commit 수행하고,
      변경되었다면 commit 을 취소하고 오류를 발생 시킨다.
    - 아무래도 pessimistic lock 방식 보다는 빠르지 않나 싶다.
    - JPA 에서는 @Version 을 이용하여 구현할 수 있다.

자세한 내용은 "자바 ORM 표준 JPA 프로그래밍" "16.1 트랜잭션과 락"을 참고하자.
