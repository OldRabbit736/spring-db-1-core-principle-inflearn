* 선언적 트랜잭션 관리 vs 프로그래밍 방식 트랜잭션 관리
- 선언적 트랜잭션 관리(Declarative Transaction Management)
    - @Transactional 애노테이션 하나만 선언해서 매우 편리하게 트랜잭션을 적용하는 방식을 선언적 트랜잭션 관리라 한다.
    - 선언적 트랜잭션 관리는 과거 XML에 설정하기도 했다. 어떤 로직에 트랜잭션을 선언하기만하면 트랜잭션이 적용되는 방식이다.
- 프로그래밍 방식 트랜잭션 관리(Programmatic Transaction Management)
    - 트랜잭션 매니저 또는 트랜잭션 템플릿 등을 사요하여 트랜잭션 관련 코드를 직접 작성하는 것을 프로그래밍 방식의 트랜잭션 관리라 한다.
- 선언적 트랜잭션 관리가 더 간편하고 실용적이기 때문에 실무에서는 대부분 선언적 트랜잭션 관리를 사용한다.
- 프로그래밍 방식의 트랜잭션 관리는 스프링 컨테이너나 스프링 AOP 기술 없이 간단히 적용할 수 있지만
  실무에서는 대부분 스프링 컨테이너와 스프링 AOP를 사용하기 때문에 그것이 그다지 중요한 장점이라고 볼 수 없다.
- 프로그래밍 방식 트랜잭션 관리는 테스트 코드에서 가끔 사용될 때가 있다.

* 정리
- 스프링이 제공하는 선언적 트랜잭션 관리 덕분에 드디어 트랜잭션 관련 코드를 순수한 비즈니스 로직에서 제거할 수 있었다.
- 개발자는 트랜잭션이 필요한 곳에 @Transactional 애노테이션 하나만 추가하면 된다.
  나머지는 스프링 트랜잭션 AOP가 자동으로 처리해준다.
- @Transactional 애노테이션에는 다양한 옵션이 존재한다.
