애플리케이션에서 트랜잭션을 어떤 계층에 걸어야 할까? 즉 어디에서 트랜잭션을 시작하고 어디에서 커밋해야 할까?
- 트랜잭션은 비즈니스 로직이 있는 서비스 계층에서 시작해야 한다.
  비즈니스 로직 내부의 여러 SQL은 같이 성공하거나 실패해야 한다.
  중간에 잘못된 부분이 있다면 비즈니스 로직 consistency를 위해 해당 비즈니스 로직을 실행하기 전으로 되돌려야 하기 때문이다.
- 트랜잭션을 시작하려면 커넥션이 필요하다. 결국 서비스 계층에서 커넥션 생성, 트랜잭션 시작, SQL 실행, 트랜잭션 커밋, 커넥션 종료해야 한다.
- 애플리케이션에서 DB 트랜잭션을 사용하려면 트랜잭션을 사용하는 동안 같은 커넥션을 유지해야 한다.
  다른 말로는, 실행하려는 비즈니스 로직이(하나의 비즈니스 로직 메서드가) 하나의 커넥션 내에서 실행되야 한다는 것이다.
  그래야 같은 세션 그리고 같은 트랜잭션 내에서 비즈니스 메서드 내의 모든 SQL 문이 실행될 수 있게 되기 때문이다.
- 비즈니스 로직 내의 SQL 실행문이 어떻게 하나의 커넥션 내에서 실행되도록 할 수 있나?
    - 리포지토리 메서드가 Connection 객체를 파라미터로 받아서 해당 커넥션을 통해 SQL을 실행하도록 한다. (MemberServiceV2, MemberRepositoryV2)

MemberServiceV2 의 accountTransfer 메서드가 이와 같이 비즈니스 로직이 한 트랜잭션 내에서 실행하도록 작성되었다.
잘 동작한다. 하지만...
코드가 매우 복잡해졌다. 비즈니스 로직보다 트랜잭션 관련 로직이 더 많아 보인다.

애플리케이션에서 DB 트랜잭션을 적용하면 서비스 계층이 매우 지저분해지고 생각보다 복잡한 코드를 요구한다.
커넥션 관련 코드도 요구된다. (하나의 메서드가 2개의 버전 - 커넥션을 전달 받는 버전, 아닌 버전)
이런 문제는 스프링을 통해 해결할 수 있다.
